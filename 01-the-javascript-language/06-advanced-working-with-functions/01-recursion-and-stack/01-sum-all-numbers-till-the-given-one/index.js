'use strict';

//Вариант с циклом
const sumTo = n => {
  let k = 0;
  for (let i = 0; i <= n; i++) {
    k += i;
  }
  return k;
};

alert(sumTo(100)); // 5050

//Вариант с рекурсией
const sumTo2 = n => {
  if (n === 1) return 1;
  return n + sumTo(n - 1);
};

alert(sumTo2(100)); // 5050

//Вариант с арифметической прогрессией
const sumTo3 = n => {
  return (n * (n + 1)) / 2;
};

alert(sumTo3(100));

// P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?

// Самый быстрый вариант - с использованием формулы, т.к. происходит всего один расчет формулы с использованием 3х операций: "+", "*", "/"

// Вариант с рекурсией - самый медленный, т.к. происходит вложенный вызов функции самой себя, следовательно - приостановка выполнения функции => сохранение контекста в стеке => создание нового контекста, и так для каждой вложенности, с циклом же - просто начинается следующая итерация вычислений

// P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)?

// Нет, произойдет переполнение стека
